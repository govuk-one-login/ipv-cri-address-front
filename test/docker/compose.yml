services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  imposter:
    image: outofcoffee/imposter:4.7.0
    volumes:
      - "../imposter:/opt/imposter/config"
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ../..
      dockerfile: local.Dockerfile
    platform: linux/amd64
    environment:
      REDIS_SESSION_URL: redis://redis:6379
      API_BASE_URL: ${API_BASE_URL:-http://imposter:8080}
      PORT: 5010
      NODE_ENV: development
      LANGUAGE_TOGGLE_DISABLED: false
      DEVICE_INTELLIGENCE_ENABLED: true
      DEVICE_INTELLIGENCE_DOMAIN: localhost
    ports:
      - "5010:5010"
    depends_on:
      - redis
      - imposter
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5010/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  cucumber:
    build:
      context: ../browser
      dockerfile: pre-merge.Dockerfile
    platform: linux/amd64
    environment:
      MOCK_API: ${MOCK_API:-true}
      WEBSITE_HOST: ${WEBSITE_HOST:-http://localhost:5010}
      MOCK_API_URL: ${MOCK_API_URL:-http://localhost:8080}
      RELYING_PARTY_URL: ${RELYING_PARTY_URL:-http://localhost:8080}
      GITHUB_ACTIONS: ${GITHUB_ACTIONS:-true}
      ENVIRONMENT: ${ENVIRONMENT:-dev}
    tty: true
    stdin_open: true
    volumes:
      - ./reports:/reports
    depends_on:
      frontend:
        condition: service_healthy
      imposter:
        condition: service_started
    network_mode: host

  url-generator:
    profiles: ["aws-api"]
    build:
      context: ../browser
      dockerfile: pre-merge.Dockerfile
    platform: linux/amd64
    environment:
      MOCK_API: false
      ENVIRONMENT: ${ENVIRONMENT:-dev}
      WEBSITE_HOST: ${WEBSITE_HOST:-https://review-a.dev.account.gov.uk}
      RELYING_PARTY_URL: ${RELYING_PARTY_URL:-https://test-resources.review-a.dev.account.gov.uk}
      AWS_PROFILE: ${AWS_PROFILE:-}
      GITHUB_ACTIONS: true
    volumes:
      - ~/.aws:/root/.aws:ro
    command: ["node", "scripts/generate-oauth-url.js"]

  frontend-dev:
    profiles: ["local-dev"]
    build:
      context: ../..
      dockerfile: local.Dockerfile
    platform: linux/amd64
    env_file:
      - ../../.env
    environment:
      REDIS_SESSION_URL: redis://redis:6379
      NODE_ENV: development
      PORT: 5011
    ports:
      - "5011:5011"
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5011/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  url-generator-dev:
    profiles: ["local-dev"]
    build:
      context: ../browser
      dockerfile: pre-merge.Dockerfile
    platform: linux/amd64
    environment:
      MOCK_API: false
      ENVIRONMENT: ${ENVIRONMENT:-dev}
      WEBSITE_HOST: ${WEBSITE_HOST:-http://localhost:5011}
      RELYING_PARTY_URL: ${RELYING_PARTY_URL:-https://test-resources.review-a.dev.account.gov.uk}
      AWS_PROFILE: ${AWS_PROFILE:-}
      CRI_ENCRYPTION_JWKS_ENDPOINT: ${CRI_ENCRYPTION_JWKS_ENDPOINT:-http://localhost:5011/jwks}
      GITHUB_ACTIONS: true
    volumes:
      - ~/.aws:/root/.aws:ro
    depends_on:
      frontend-dev:
        condition: service_healthy
    network_mode: host
    command: ["node", "scripts/generate-oauth-url.js"]

  ipv-core-stub:
    build:
      context: ../../../ipv-stubs/di-ipv-core-stub/
      dockerfile: Dockerfile-arm64
      target: nodynatrace
      no_cache: true
    container_name: ipv-core-stub-address
    ports:
      - "8085:8085"
    environment:
      - CORE_STUB_CONFIG_FILE=/app/config/di-ipv-config.yaml
    env_file:
      - ../../../ipv-config/stubs/di-ipv-core-stub/.env
    volumes:
      - ../../../ipv-config/stubs/di-ipv-core-stub:/app/config
      - ../browser/di-ipv-config.yaml:/app/config/di-ipv-config.yaml
    profiles:
      - core-stub


