{% from "./attributes.njk" import govukAttributes %}

{%- from "govuk/components/error-message/macro.njk" import govukErrorMessage %}
{%- from "govuk/components/hint/macro.njk" import govukHint %}
{%- from "govuk/components/label/macro.njk" import govukLabel %}

{#- a record of other elements that we need to associate with the input using
  aria-describedby â€“ for example hints or error messages -#}
{% set describedBy = individualInput.describedBy if individualInput.describedBy else undefined -%}

{%- macro _inputElement(individualInput, params) -%}
  {#- Set classes for this component #}
  {%- set classNames = "govuk-input" -%}

  {%- if individualInput.classes %}
    {% set classNames = classNames + " " + individualInput.classes %}
  {% endif %}
  {%- if individualInput.errorMessage or params.errorMessage %}
    {% set classNames = classNames + " govuk-input--error" %}
  {% endif %}

  <input
    {{- govukAttributes({
      class: classNames,
      id: individualInput.id,
      name: individualInput.name,
      type: individualInput.type | default("text", true),
      spellcheck: {
        value: individualInput.spellcheck | string
          if [true, false].includes(individualInput.spellcheck)
          else false,
        optional: true
      },
      value: {
        value: individualInput.value,
        optional: true
      },
      disabled: {
        value: individualInput.disabled,
        optional: true
      },
      "aria-describedby": {
        value: describedBy,
        optional: true
      },
      autocomplete: {
        value: individualInput.autocomplete,
        optional: true
      },
      autocapitalize: {
        value: individualInput.autocapitalize,
        optional: true
      },
      pattern: {
        value: individualInput.pattern,
        optional: true
      },
      inputmode: {
        value: individualInput.inputmode,
        optional: true
      }
    }) -}}

    {{- govukAttributes(individualInput.attributes) }}>
{%- endmacro -%}

<div class="govuk-form-group {%- if params.errorMessage %} govuk-form-group--error {% endif %}"
  {{- govukAttributes(params.formGroup.attributes) }}
>

  {{ govukLabel({
    html: params.label.html,
    text: params.label.text,
    classes: params.label.classes,
    isPageHeading: params.label.isPageHeading,
    attributes: params.label.attributes
  }) }}

  {{ govukHint({
    id: hintId,
    classes: params.hint.classes,
    attributes: params.hint.attributes,
    html: params.hint.html,
    text: params.hint.text
  }) }}
  {% if params.errorMessage %}
    {% set errorId = params.id + '-error' %}
    {% set describedBy = describedBy + ' ' + errorId if describedBy else errorId %}
    {{ govukErrorMessage({
      id: errorId,
      classes: params.errorMessage.classes,
      attributes: params.errorMessage.attributes,
      html: params.errorMessage.html,
      text: params.errorMessage.text,
      visuallyHiddenText: params.errorMessage.visuallyHiddenText
    }) | trim | indent(2) }}
  {% endif %}

  <div class="{%- if params.wrapper.classes %} {{ params.wrapper.classes }}{% endif %}">
  {% for individualInput in params.inputs %}
    <div class="{{ 'govuk-!-margin-bottom-5' if not loop.last }} {{ 'govuk-form-group--error' if individualInput.errorMessage and individualInput.errorMessage.text and individualInput.errorMessage.text | trim }}">
      {{ govukLabel({
        html: individualInput.label.html,
        text: individualInput.label.text,
        classes: individualInput.label.classes,
        isPageHeading: individualInput.label.isPageHeading,
        attributes: individualInput.label.attributes,
        for: individualInput.id
      }) | trim | indent(2) }}
      {% if individualInput.hint %}
        {% set hintId = individualInput.id + '-hint' %}
        {% set describedBy = describedBy + ' ' + hintId if describedBy else hintId %}
        {{ govukHint({
          id: hintId,
          classes: individualInput.hint.classes,
          attributes: individualInput.hint.attributes,
          html: individualInput.hint.html,
          text: individualInput.hint.text
        }) | trim | indent(2) }}
      {% endif %}
      {% if individualInput.errorMessage %}
        {% set errorId = individualInput.id + '-error' %}
        {% set describedBy = describedBy + ' ' + errorId if describedBy else errorId %}
        {{ govukErrorMessage({
          id: errorId,
          classes: individualInput.errorMessage.classes,
          attributes: individualInput.errorMessage.attributes,
          html: individualInput.errorMessage.html,
          text: individualInput.errorMessage.text,
          visuallyHiddenText: individualInput.errorMessage.visuallyHiddenText
        }) | trim | indent(2) }}
      {% endif %}

      {{ _inputElement(individualInput, params) }}
    </div>
  {% endfor %}

  </div>
</div>
